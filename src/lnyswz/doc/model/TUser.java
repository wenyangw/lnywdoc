package lnyswz.doc.model;
// Generated 2013-8-14 10:42:53 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TUser generated by hbm2java
 */
@Entity
@Table(name = "t_user")
public class TUser implements java.io.Serializable {

	private int id;
	private TDepartment TDepartment;
	private TPost TPost;
	private String userName;
	private String password;
	private String realName;
	private String sex;
	private int orderNum;
	private String isYwy;
	private String isBgy;
	private Date createTime;
	private Date modifyTime;
	private Date lastTime;
	private Set<TRole> TRoles = new HashSet<TRole>(0);

	public TUser() {
	}

	public TUser(int id, TDepartment TDepartment, String userName,
			String password, String realName, String sex, int orderNum, Date createTime,
			Date modifyTime, Date lastTime, Set<TRole> TRoles) {
		this.id = id;
		this.TDepartment = TDepartment;
		this.userName = userName;
		this.password = password;
		this.realName = realName;
		this.sex = sex;
		this.orderNum = orderNum;
		this.createTime = createTime;
		this.modifyTime = modifyTime;
		this.lastTime = lastTime;
		this.TRoles = TRoles;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "depId", nullable = false)
	public TDepartment getTDepartment() {
		return this.TDepartment;
	}

	public void setTDepartment(TDepartment TDepartment) {
		this.TDepartment = TDepartment;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "postId")
	public TPost getTPost() {
		return TPost;
	}

	public void setTPost(TPost tPost) {
		TPost = tPost;
	}

	@Column(name = "userName", unique = true, nullable = false)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "realName", nullable = true)
	public String getRealName() {
		return this.realName;
	}

	public void setRealName(String realName) {
		this.realName = realName;
	}

	@Column(name = "sex")
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}
	
	@Column(name = "orderNum", nullable = false)
	public int getOrderNum() {
		return orderNum;
	}

	public void setOrderNum(int orderNum) {
		this.orderNum = orderNum;
	}

	@Column(name = "isYwy", nullable = true)
	public String getIsYwy() {
		return isYwy;
	}

	public void setIsYwy(String isYwy) {
		this.isYwy = isYwy;
	}

	@Column(name = "isBgy", nullable = true)
	public String getIsBgy() {
		return isBgy;
	}

	public void setIsBgy(String isBgy) {
		this.isBgy = isBgy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createTime", length = 23)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modifyTime", length = 23)
	public Date getModifyTime() {
		return this.modifyTime;
	}

	public void setModifyTime(Date modifyTime) {
		this.modifyTime = modifyTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastTime", length = 23)
	public Date getLastTime() {
		return this.lastTime;
	}

	public void setLastTime(Date lastTime) {
		this.lastTime = lastTime;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "t_user_role", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "roleId", nullable = false, updatable = false) })
	public Set<TRole> getTRoles() {
		return this.TRoles;
	}

	public void setTRoles(Set<TRole> TRoles) {
		this.TRoles = TRoles;
	}

}
